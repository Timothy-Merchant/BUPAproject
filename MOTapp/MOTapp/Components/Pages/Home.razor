@page "/"
@inject NavigationManager NavigationManager;
@inject VehicleClient Client;

<PageTitle>Vehicle MOT Search</PageTitle>

<div class="row">
    <div class="col-md-4 mt-3">
        <EditForm Model="Model"
                  FormName="searchVehicles"
                  OnValidSubmit="SearchVehiclesAsync">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label for="registrationNumber" class="form-label">Please enter your Registration Number:</label>
                <InputText id="registrationNumber" @bind-Value="Model!.registrationNumber" class="form-control" />
                <ValidationMessage For="() => Model.registrationNumber"/>
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
            <a role="button" class="btn btn-secondary" href="/">Clear</a>
        </EditForm>
    </div>
</div>

<div class="mt-3">

    @if (vehicle is null)
    {
        <p><em>Please input your registration number to begin search.</em></p>
    }
    else if (vehicle.notFound)
    {
        <p><em>Could not retrieve a vehicle with that registration.</em></p>
    }
    else
    {
        <table class="table table-striped table-bordered table-hover mt-3">
            <thead class="table-dark">
            <th>Make</th>
            <th>Model</th>
            <th>Colour</th>
            <th>MOT Expiry Date</th>
            <th>Mileage At Last MOT</th>
            </thead>
            <tbody>
                <tr>
                    <td>@vehicle.Make</td>
                    <td>@vehicle.Model</td>
                    <td>@vehicle.Colour</td>
                    <td>@vehicle.MOTexpiryDate</td>
                    <td>@vehicle.MileageAtLastMOT</td>
                </tr>
            </tbody>
        </table>
    }
</div>


@code {

    [SupplyParameterFromForm]
    public UserInput? Model { get; set; }

    private VehicleDTO? vehicle;

    protected override void OnInitialized() => Model ??= new UserInput()
        {
            registrationNumber = ""
        };

    private async Task SearchVehiclesAsync() => vehicle = await Client.GetVehicleAsync(Model?.registrationNumber ?? "");
}
